<archimate:Folder
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Editors and debuggers"
    id="44e1adca-0068-4f09-8b39-e096ae3ba4ce"
    documentation="Since Node.js code is JavaScript, any JavaScript-aware editor will be useful. Unlike some other languages that are so complex that an IDE with code completion is a necessity, a simple programming editor is perfectly sufficient for Node.js development.&#xA;Two editors are worth calling out because they are written in Node.js: Atom and Microsoft Visual Studio Code.&#xA;Atom (https:/​/​atom.​io/​) bills itself as a hackable editor for the 21st century. It is extendable by writing Node.js modules using the Atom API, and the configuration files are easily editable. In other words, it's hackable in the same way plenty of other editors have been, going back to Emacs, meaning one writes a software module to add capabilities to the editor. The Electron framework was invented in order to build Atom, and Electron is a super easy way to build desktop applications using Node.js.&#xA;Microsoft Visual Studio Code (https:/​/​code.​visualstudio.​com/​) is also a hackable editor—well, the home page says extensible and customizable, which means the same thing—that is also open source, and is also implemented in Electron. But it's not a hollow me-too editor, aping Atom while adding nothing of its own. Instead, Visual Studio Code is a solid programmers editor in its own right, bringing interesting functionality to the table.&#xA;As for debuggers, there are several interesting choices. Starting with Node.js 6.3, the inspector protocol made it possible to use the Google Chrome debugger. Visual Studio Code has a built-in debugger that also uses the inspector protocol.&#xA;For a full list of debugging options and tools, see https:/​/​nodejs.​org/​en/​docs/ guides/​debugging-​getting-​started/​."/>
