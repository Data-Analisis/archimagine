<archimate:Folder
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Node.js, the microservice architecture, and easily testable systems"
    id="3fceb56a-5e7a-4c5c-92ac-6f6c75b21d2d"
    documentation="New capabilities, such as cloud deployment systems and Docker, make it possible to implement a new kind of service architecture. Docker makes it possible to define server process configuration in a repeatable container that's easy to deploy by the millions into a cloud hosting system. It lends itself best to small single-purpose service instances that can be connected together to make a complete system. Docker isn't the only tool to help simplify cloud deployments; however, its features are well attuned to modern application deployment needs.&#xA;Some have popularized the microservice concept as a way to describe this kind of system. According to the microservices.io website, a microservice consists of a set of narrowly focused, independently deployable services. They contrast this with the monolithic application deployment pattern where every aspect of the system is integrated into one bundle (such as a single WAR file for a Java EE app server). The microservice model gives developers much needed flexibility.&#xA;Some advantages of microservices are as follows:&#xA;Each microservice can be managed by a small team&#xA;Each team can work on its own schedule, so long as the service API compatibility is maintained&#xA;Microservices can be deployed independently, such as for easier testing It's easier to switch technology stack choices&#xA;Where does Node.js fit in with this? Its design fits the microservice model like a glove:&#xA;Node.js encourages small, tightly focused, single-purpose modules&#xA;These modules are composed into an application by the excellent npm package management system&#xA;Publishing modules is incredibly simple, whether via the NPM repository or a Git URL"/>
