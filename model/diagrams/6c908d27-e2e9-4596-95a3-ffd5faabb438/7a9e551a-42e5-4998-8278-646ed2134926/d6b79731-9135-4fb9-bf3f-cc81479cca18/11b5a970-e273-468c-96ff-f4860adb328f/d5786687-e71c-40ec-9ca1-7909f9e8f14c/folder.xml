<archimate:Folder
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Configuring the PATH variable to handle commands installed by modules"
    id="d5786687-e71c-40ec-9ca1-7909f9e8f14c"
    documentation="Typing the full pathname is not a user-friendly requirement to execute the command. We want to use the commands installed by modules, and we want a simple process for doing so. Meaning, we must add an appropriate value in the PATH variable, but what is it?&#xA;For global package installations, the executable lands in a directory that is probably already in your PATH variable, like /usr/bin or /usr/local/bin. Local package installations are what require special handling. The full path for&#xA;the node_modules/.bin directory varies for each project, and obviously it won't work to add the full path for every node_modules/.bin directory to your PATH.&#xA;Adding ./node_modules/.bin to the PATH variable (or, on Windows, .\node_modules\.bin) works great. Any time your shell is in the root of a Node.js project, it will automatically find locally-installed commands from Node.js packages.&#xA;How we do this depends on the command shell you use, and your operating system.&#xA;On a Unix-like system the command shells are bash and csh. Your PATH variable would be set up in one of these ways:&#xA;   $ export PATH=./node_modules/.bin:${PATH}     # bash&#xA;   $ setenv PATH ./node_modules/.bin:${PATH}     # csh&#xA;The next step is adding the command to your login scripts so the variable is always set. On bash, add the corresponding line to your ~/.bashrc, and on csh add it to your ~/.cshrc."/>
